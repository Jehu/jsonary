{"title":"Jsonary Schema List","description":"A container for multiple Jsonary Schema objects.\n\nThis simplifies accessing values (such as minimum values) which need to be combined across schemas.\n\nIndividual schemas can be extracted using the \"length\" property and [0], [1], etc.","methods":{"allowedAdditionalProperties":{"return":{"title":"boolean","type":["boolean"]},"description":"Whether object instances following all the schemas in this list are allowed properties other than those in definedProperties()"},"basicTypes":{"description":"The basic types allowed for instances following all the schemas in this list.","return":{"title":"array of basic types","type":["array"],"items":{"type":["string"],"title":"basic type","enum":["null","boolean","integer","number","string","array","object"]},"uniqueItems":false}},"concat":{"description":"Joins this schema list with another","arguments":[{"$ref":"#"}],"return":{"$ref":"#"}},"containsUrl":{"description":"Searches the schemas in the list based on URL","return":{"title":"boolean","type":["boolean"]},"arguments":[{"title":"suffixOrRegex","type":["string","object"],"oneOf":[{"title":"URL suffix","description":"Matches any URL ending in exactly this string","type":["string"]},{"title":"RegExp object","type":["object"]}]}]},"createValue":{"description":"Attempts to assemble a value that satisfies the constraints of all the schemas in this list.\n\nThere is an optional callback, in case extra schema data needs to be fetched using AJAX.\n\nCurrently not great, but better than nothing.","return":{"title":"data","description":"If a callback is provided, the return value is undefined."},"arguments":[{"title":"[callback]","description":"callback(newValue)"}]},"createValueForIndex":{"description":"Shorthand for .indexSchemas(index).createValue(...)","arguments":[{"title":"index","description":"","type":["integer"],"minimum":0},{"title":"[callback]","description":"callback(newValue)"}],"return":{"title":"value","description":"If a callback is provided, the return value is undefined."}},"createValueForProperty":{"description":"Shorthand for .propertySchemas().createValue(key)","return":{"title":"value","description":"If a callback is provided, the return value is undefined."},"arguments":[{"title":"key","type":["string"]},{"title":"[callback]","description":"callback(newValue)"}]},"definedProperties":{"description":"Lists the properties that are known about.\n\nThe way that this is assembled varies depending on the value of additionalProperties() for the individual schemas.","return":{"title":"array of keys","type":["array"],"items":{"title":"key name","type":["string"]}}},"each":{"description":"Iterates over all the schemas in this list.","arguments":[{"title":"callback","description":"callback(index, schema)"}],"return":{"$ref":"#"}},"enumValues":{"description":"The enum values that are valid for all the schemas in this list.","return":{"title":"array of possible values","description":"(may be undefined)","type":["array"]}},"exclusiveMaximum":{"description":"Whether the limit returned by maximum() is exclusive or not","return":{"title":"boolean","type":["boolean"]}},"exclusiveMinimum":{"description":"Whether the limit returned by minimum() is exclusive or not","return":{"title":"boolean","type":["boolean"]}},"getFull":{"description":"Assembles the full versions (not references) of all schemas in this list, as well as the \"and\"/\"allOf\" schemas.\n\nWithout this, the results of other methods might not be complete.","arguments":[{"title":"callback","description":"callback(fullSchemaList)"}]},"indexSchemas":{"description":"List of schemas for the Nth item in array instances","arguments":[{"title":"index","type":["integer"],"minimum":0}],"return":{"$ref":"#"}},"maxItems":{"description":"The maximum number of items for array instances following these schemas","return":{"title":"maximum array length","type":["integer"],"minimum":0,"description":"(may be undefined)"}},"maximum":{"description":"The maximum numerical value for instances following these schemas","return":{"title":"maximum value","description":"(may be undefined)","type":["number"]}},"minItems":{"description":"The minimum number of items for instances following these schemas.","return":{"title":"minimum array length","type":["integer"],"minimum":0}},"minimum":{"description":"The minimum numerical value for instances following these schemas","return":{"title":"minimum value","type":["number"],"description":"(may be undefined)"}},"numberInterval":{"description":"Numeric instances following these schemas must be an integer multiple of this value.","return":{"title":"factor","description":"(may be undefined)","type":["number"],"minimum":0,"exclusiveMinimum":true}},"potentialLinks":{"description":"A list of possible links defined in these schemas","return":{"title":"array of potential links","type":["array"],"items":{"$ref":"potentiallink.json"}}},"propertySchemas":{"description":"The schemas describing this property for any object instance following these schemas.","arguments":[{"title":"key","type":["string"]}],"return":{"$ref":"#"}},"requiredProperties":{"description":"The properties that are required by object instances following these schemas","return":{"title":"array of keys","type":["array"],"items":{"type":["string"],"title":"key name"}}}}}