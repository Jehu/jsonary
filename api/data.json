{"title":"Jsonary Data wrapper","description":"A container for all sorts of JSON data","methods":{"addLink":{"description":"A raw Link Description Object","arguments":[{"$ref":"ldo.json"}],"return":{"$ref":"#"}},"addSchema":{"description":"Adds a schema describing the data","arguments":[{"title":"schemaOrUrl","type":["string","object"],"oneOf":[{"title":"Schema URL","type":["string"]},{"$ref":"schema.json"}]}],"return":{"$ref":"#"}},"asLink":{"description":"Returns the data, re-interpreted as a link","return":{"$ref":"link.json"}},"asSchema":{"description":"Returns the data, re-interpreted as a JSON Schema definition","return":{"$ref":"schema.json"}},"basicType":{"description":"The \"basic type\" of the data (one of the seven types defined in JSON Schema).","return":{"title":"Basic type","description":"","type":["string"],"enum":["null","boolean","integer","number","string","object","array"]}},"defined()":{"description":"Whether this data has a defined value.\n\nFor instance, to see if a property exists:\n    data.property(\"keyName\").defined()","return":{"title":"boolean","type":["boolean"]}},"editableCopy":{"description":"An editable version of the current data.","return":{"$ref":"#"}},"equals":{"description":"Recursive data comparison","arguments":[{"$ref":"#"}],"return":{"title":"boolean","type":["boolean"]}},"get":{"description":"Access data using JSON Pointer","arguments":[{"title":"pointerPath","description":"A JSON Pointer path","type":["string"]}],"return":{"title":"stored data"}},"getLink":{"description":"Get the first link with the specified link relation","arguments":[{"title":"[rel]","description":"Optional link relation value","type":["null","string"]}],"return":{"$ref":"link.json"}},"item":{"description":"Get the Nth item in an array","arguments":[{"title":"index","type":["integer"],"minimum":0}],"return":{"$ref":"#"}},"itemValue":{"description":"Shortcut for .item(index).value()","arguments":[{"title":"index","type":["integer"],"minimum":0}],"return":{"$ref":"#"}},"items":{"description":"Iterate over the items in an array.\n\nIf the value is not an array, then this is a no-op.","arguments":[{"title":"callback","description":"callback(index, subData)"}],"return":{"$ref":"#"}},"json":{"description":"Returns the value as a JSON string.\n\nMostly useful for debugging on the command line.","return":{"title":"JSON string","type":["string"]}},"keys":{"description":"The keys defined, if the value is an object","return":{"title":"array of keys","type":["array"],"items":{"title":"key","type":["string"]},"uniqueItems":true}},"length":{"return":{"type":["integer"],"minimum":0,"title":"array length"},"description":"Length of the value, if it is an array"},"links":{"description":"The links currently defined on the object","return":{"title":"array of links","type":["array"],"items":{"$ref":"link.json"}}},"moveTo":{"description":"Move the value in this wrapper to somewhere else in the document.\n\nReturns the Jsonary data wrapper for the *new* location, not the old one.","arguments":[{"title":"targetOrPath","type":["string","object"],"oneOf":[{"title":"JSON Pointer path","type":["string"]},{"$ref":"#"}]}],"return":{"$ref":"#"}},"parent":{"description":"The parent data wrapper ","return":{"$ref":"#"}},"parentKey":{"description":"The key or index to address this data wrapper from the parent.\n\nFor example:\n    var data = Jsonary.create({\"key\": \"value\"});\n    var child = data.property(\"key\");\n    var parentKey = child.parentKey(); // \"key\"","return":{"type":["string"],"title":"key or index"}},"pointerPath":{"description":"The JSON Pointer path to address this data wrapper from the parent object","return":{"title":"JSON Pointer path","type":["string"]}},"properties":{"description":"Iterate over the defined properties of the value.\n\nIf the value is not an object, this is a no-op.","arguments":[{"title":"callback","description":"callback(key, subData)"}],"return":{"$ref":"#"}},"property":{"description":"Access the object property of the data","arguments":[{"title":"key","type":["string"]}],"return":{"$ref":"#"}},"propertyValue":{"description":"shortcut for .property(key).value()","arguments":[{"title":"key","type":["string"]}],"return":{"title":"stored data"}},"push":{"description":"Push a value onto the end of the array","arguments":[{"title":"value"}],"return":{"$ref":"#"}},"readOnly":{"description":"Whether the current data/document is read-only","return":{"title":"boolean","type":["boolean"]}},"readOnlyCopy":{"description":"Returns a read-only copy of the data (or the data itself, if it's already read-only).\n\nSchemas are preserved.","return":{"$ref":"#"}},"referenceUrl":{"description":"A canonical URL for this data, if it has one.  It uses the JSON Pointer path as the fragment.","return":{"title":"URL","type":["string"]}},"remove":{"description":"Remove the current data from the parent.\n\ne.g.\n    data.property(\"key\").remove()","return":{"$ref":"#"}},"removeItem":{"description":"shorthand for .item(index).remove()","arguments":[{"title":"index","type":["integer"],"minimum":0}],"return":{"$ref":"#"}},"removeProperty":{"description":"shorthand for .property(key).remove()","arguments":[{"title":"key","type":["string"]}],"return":{"$ref":"#"}},"resolveUrl":{"description":"Resolve a relative URL against the data's base URL","arguments":[{"title":"url","type":["string"]}],"return":{"title":"absolute URL"}},"schemas":{"description":"The schemas describing the current item","return":{"$ref":"schemalist.json"}},"set":{"description":"Sets a value using a JSON Pointer path","arguments":[{"title":"pointerPath","type":["string"]},{"title":"value"}],"return":{"$ref":"#"}},"setValue":{"description":"Sets the stored value of the current data wrapper.","arguments":[{"title":"value"}],"return":{"$ref":"#"}},"subPath":{"description":"Navigates down from this data using JSON Pointer.\n\nIf any of the intermediate values are scalar types (string, number, etc.), then it acts as if they were objects.\n\nIt only navigates down into array items when the value is already defined as an array.","arguments":[{"title":"pointerPath","type":["string"]}],"return":{"$ref":"#"}},"value":{"description":"The current value being stored by this data wrapper","return":{"title":"stored value"}},"whenSchemasStable":{"description":"Because schemas can be fetched asynchronously, it's sometimes desirable to wait until they've all loaded.","arguments":[{"title":"callback","description":"callback(data, schemas)"}]}},"properties":{"document":{"$ref":"document.json"},"uniqueId":{"title":"Unique ID","description":"A number unique to this Jsonary Data wrapper"}}}